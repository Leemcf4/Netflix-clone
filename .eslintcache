[{"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\index.js":"1","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\App.js":"2","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\serviceWorker.js":"3","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\app\\store.js":"4","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\Nav.js":"5","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\Banner.js":"6","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\axios.js":"7","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\requests.js":"8","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\Row.js":"9","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\Movie.js":"10","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\features\\movieSlice.js":"11","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\HomeScreen.js":"12","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\LoginScreen.js":"13","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\SignUpScreen.js":"14","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\firebase.js":"15","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\features\\userSlice.js":"16","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\ProfileScreen.js":"17","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\MovieScreen.js":"18","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\PlansScreen.js":"19","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\WatchlistScreen.js":"20"},{"size":635,"mtime":1612463511744,"results":"21","hashOfConfig":"22"},{"size":1747,"mtime":1612714427721,"results":"23","hashOfConfig":"22"},{"size":5141,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":260,"mtime":1612469643135,"results":"25","hashOfConfig":"22"},{"size":3562,"mtime":1612714597343,"results":"26","hashOfConfig":"22"},{"size":2557,"mtime":1612549393462,"results":"27","hashOfConfig":"22"},{"size":137,"mtime":1612383760103,"results":"28","hashOfConfig":"22"},{"size":707,"mtime":1612384640484,"results":"29","hashOfConfig":"22"},{"size":2779,"mtime":1612534982327,"results":"30","hashOfConfig":"22"},{"size":2570,"mtime":1612720446053,"results":"31","hashOfConfig":"22"},{"size":1455,"mtime":1612535827071,"results":"32","hashOfConfig":"22"},{"size":1552,"mtime":1612475125853,"results":"33","hashOfConfig":"22"},{"size":1536,"mtime":1612731337979,"results":"34","hashOfConfig":"22"},{"size":2330,"mtime":1612709116268,"results":"35","hashOfConfig":"22"},{"size":555,"mtime":1612467620120,"results":"36","hashOfConfig":"22"},{"size":1322,"mtime":1612568372497,"results":"37","hashOfConfig":"22"},{"size":1287,"mtime":1612708506765,"results":"38","hashOfConfig":"22"},{"size":3261,"mtime":1612721605208,"results":"39","hashOfConfig":"22"},{"size":3658,"mtime":1612645968014,"results":"40","hashOfConfig":"22"},{"size":1699,"mtime":1612717500080,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1acr910",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\index.js",[],["89","90"],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\App.js",["91"],"import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport \"./App.css\"\r\nimport {\r\n  login,\r\n  logout,\r\n  selectCurrentPlan,\r\n  selectUser,\r\n} from \"./features/userSlice\"\r\nimport { auth } from \"./firebase\"\r\nimport HomeScreen from \"./screens/HomeScreen\"\r\nimport LoginScreen from \"./screens/LoginScreen\"\r\nimport MovieScreen from \"./screens/MovieScreen\"\r\nimport ProfileScreen from \"./screens/ProfileScreen\"\r\nimport SignUpScreen from \"./screens/SignUpScreen\"\r\nimport WatchlistScreen from \"./screens/WatchlistScreen\"\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser)\r\n  const plan = useSelector(selectCurrentPlan)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        dispatch(login({ uid: userAuth.uid, email: userAuth.email }))\r\n      } else {\r\n        dispatch(logout())\r\n      }\r\n    })\r\n    return unsubscribe\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {!user ? (\r\n          <LoginScreen />\r\n        ) : (\r\n          <Switch>\r\n            <Route path=\"/movie/:id\" component={MovieScreen}></Route>\r\n            <Route path=\"/watchlist\" exact>\r\n              <WatchlistScreen />\r\n            </Route>\r\n            <Route path=\"/profile\" exact>\r\n              <ProfileScreen />\r\n            </Route>\r\n            <Route path=\"/signin\" exact>\r\n              <SignUpScreen />\r\n            </Route>\r\n            <Route path=\"/\" exact>\r\n              <HomeScreen />\r\n            </Route>\r\n          </Switch>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\serviceWorker.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\app\\store.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\Nav.js",["92","93"],"import axios from \"axios\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { getMovieWatchlist, movieDetails } from \"./features/movieSlice\"\r\nimport \"./Nav.css\"\r\n\r\nfunction Nav() {\r\n  const [show, setShow] = useState(false)\r\n\r\n  const [name, setName] = useState(\"\")\r\n  const [searchResults, setSearchResults] = useState([])\r\n  const [timer, setTimer] = useState(null)\r\n  const [onFocus, setOnFocus] = useState(false)\r\n  const history = useHistory()\r\n\r\n  const watchlist = useSelector(getMovieWatchlist)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const searchSubs = async () => {\r\n    clearTimeout(timer)\r\n    setTimer(\r\n      setTimeout(async () => {\r\n        try {\r\n          const { data } = await axios.get(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=1e23ba90b1f2e5e9e44f5674ee73fb30&language=en-US&query=${name}`\r\n          )\r\n          setSearchResults(data)\r\n          console.log(data)\r\n        } catch (err) {\r\n          console.log(err)\r\n        }\r\n      }, 250)\r\n    )\r\n  }\r\n\r\n  const goToMovie = (movie) => {\r\n    dispatch(movieDetails(movie))\r\n    setName(\"\")\r\n    history.push(`/movie/${movie.id}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (name.trim() === \"\") {\r\n      setSearchResults([])\r\n      return\r\n    }\r\n    searchSubs()\r\n  }, [name])\r\n\r\n  const transitionNav = () => {\r\n    if (window.scrollY > 100) {\r\n      setShow(true)\r\n    } else {\r\n      setShow(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transitionNav)\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", transitionNav)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <div className=\"nav__content\">\r\n        <img\r\n          onClick={() => history.push(\"\")}\r\n          className=\"nav__logo\"\r\n          src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n          alt=\"\"\r\n        />\r\n\r\n        <div className=\"nav__search\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"search\"\r\n            className=\"nav__search__input \"\r\n            // style={{ backgroundColor: \"#F5F5F5\" }}\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            onFocus={() => setOnFocus(true)}\r\n            // onBlur={() => setOnFocus(false)}\r\n          />\r\n          {onFocus &&\r\n            !name == \"\" &&\r\n            searchResults.results?.map((result) => (\r\n              <div\r\n                key={result.id}\r\n                className=\"result__box \"\r\n                onClick={() => goToMovie(result)}\r\n              >\r\n                <img\r\n                  className=\"object-contain \"\r\n                  src={`https://image.tmdb.org/t/p/w500/${result.poster_path}`}\r\n                  alt=\"movie\"\r\n                />\r\n                <div className=\" result__info\">\r\n                  <p className=\"font-medium\">{result.name}</p>\r\n                  <p className=\"text-gray-500\">{result.title}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n        <p className=\"nav__list\" onClick={() => history.push(`/watchlist`)}>\r\n          My List <small>{watchlist?.length} </small>\r\n        </p>\r\n        <img\r\n          onClick={() => history.push(\"/profile\")}\r\n          className=\"nav__avatar\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\Banner.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\axios.js",[],["94","95"],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\requests.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\Row.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\Movie.js",["96","97"],"import React from \"react\"\r\nimport \"./Movie.css\"\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { addMovie, getMovieWatchlist, removeMovie } from \"./features/movieSlice\"\r\nimport RemoveIcon from \"@material-ui/icons/Remove\"\r\nimport PauseIcon from \"@material-ui/icons/Pause\"\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nfunction Movie({ isLarge, movie, base_url, handleClick, trailerUrl }) {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const addToWatchlist = (movie) => {\r\n    dispatch(addMovie(movie))\r\n  }\r\n\r\n  const removeFromWatchlist = (movie) => {\r\n    dispatch(removeMovie(movie))\r\n    // if (router.pathname === \"/watchlist\") {\r\n    //   router.push(\"/watchlist\")\r\n    // }\r\n  }\r\n\r\n  console.log(movie)\r\n\r\n  const watchlist = useSelector(getMovieWatchlist)\r\n\r\n  let isInWatch = watchlist?.find((o) => o.movie.id === movie.id)\r\n\r\n  return (\r\n    <div className={`row__poster ${isLarge && \"row__poster__large\"}`}>\r\n      <img\r\n        className={`row__poster__image ${\r\n          isLarge && \"row__poster__large__image\"\r\n        }`}\r\n        src={`${base_url}${isLarge ? movie.poster_path : movie.backdrop_path}`}\r\n        alt={movie.name}\r\n      />\r\n\r\n      <div\r\n        className={`row__poster__over ${isLarge && \"row__poster__large__over\"}`}\r\n      >\r\n        <div className=\"button__container\">\r\n          <button\r\n            className={`movie__play ${isLarge && \"movie__play__large\"}`}\r\n            onClick={() => handleClick(movie)}\r\n          >\r\n            {trailerUrl === \"\" || trailerUrl === movie.name ? (\r\n              <PlayArrowIcon />\r\n            ) : (\r\n              <PauseIcon />\r\n            )}\r\n          </button>\r\n          {!isInWatch ? (\r\n            <button\r\n              onClick={() =>\r\n                addToWatchlist({\r\n                  movie,\r\n                })\r\n              }\r\n              className={`movie__add ${isLarge && \"movie__add__large\"}`}\r\n            >\r\n              <AddIcon />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() =>\r\n                removeFromWatchlist({\r\n                  movie,\r\n                })\r\n              }\r\n              className={`movie__add ${isLarge && \"movie__add__large\"}`}\r\n            >\r\n              <RemoveIcon />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Movie\r\n","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\features\\movieSlice.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\HomeScreen.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\LoginScreen.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\SignUpScreen.js",["98"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { auth } from \"../firebase\"\r\nimport \"./SignUpScreen.css\"\r\n\r\nfunction SignUpScreen() {\r\n  const emailRef = useRef(null)\r\n  const passwordRef = useRef(null)\r\n  const [isSignUp, setIsSignUp] = useState(false)\r\n\r\n  const register = (e) => {\r\n    e.preventDefault()\r\n    auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser)\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message)\r\n      })\r\n  }\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault()\r\n    auth\r\n      .signInWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser)\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"SignUpScreen\">\r\n      <form>\r\n        {!isSignUp ? (\r\n          <>\r\n            <h1>Sign In</h1>\r\n            <input ref={emailRef} type=\"email\" placeholder=\"Email\" />\r\n            <input ref={passwordRef} type=\"password\" placeholder=\"Password\" />\r\n            <button type=\"submit\" onClick={signIn}>\r\n              Sign In\r\n            </button>\r\n            <h4>\r\n              <span className=\"SignUpScreen__gray\">New to Netflix? </span>\r\n              <span\r\n                className=\"SignUpScreen__link\"\r\n                onClick={() => setIsSignUp(true)}\r\n              >\r\n                Sign Up now\r\n              </span>\r\n            </h4>{\" \"}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h1>Sign Up</h1>\r\n            <input ref={emailRef} type=\"email\" placeholder=\"Email\" />\r\n            <input ref={passwordRef} type=\"password\" placeholder=\"Password\" />\r\n            <button type=\"submit\" onClick={register}>\r\n              Sign Up\r\n            </button>\r\n            <h4>\r\n              <span className=\"SignUpScreen__gray\">Already a member? </span>\r\n              <span\r\n                className=\"SignUpScreen__link\"\r\n                onClick={() => setIsSignUp(false)}\r\n              >\r\n                Sign In\r\n              </span>\r\n            </h4>{\" \"}\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUpScreen\r\n","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\firebase.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\features\\userSlice.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\MovieScreen.js",[],"C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\PlansScreen.js",["99","100"],"import { loadStripe } from \"@stripe/stripe-js\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { currentPlan, selectUser } from \"../features/userSlice\"\r\nimport db from \"../firebase\"\r\nimport \"./PlansScreen.css\"\r\n\r\nfunction PlansScreen() {\r\n  const [products, setProducts] = useState([])\r\n  const user = useSelector(selectUser)\r\n  const [subscription, setSubscription] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    db.collection(\"customers\")\r\n      .doc(user?.uid)\r\n      .collection(\"subscriptions\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach(async (subscription) => {\r\n          setSubscription({\r\n            role: subscription.data().role,\r\n            current_period_end: subscription.data().current_period_end.seconds,\r\n            current_period_start: subscription.data().current_period_start\r\n              .seconds,\r\n          })\r\n        })\r\n      })\r\n    // dispatch(currentPlan(subscription))\r\n  }, [user.uid])\r\n\r\n  useEffect(() => {\r\n    db.collection(\"products\")\r\n      .where(\"active\", \"==\", true)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const products = {}\r\n        querySnapshot.forEach(async (productDoc) => {\r\n          products[productDoc.id] = productDoc.data()\r\n          const priceSnap = await productDoc.ref.collection(\"prices\").get()\r\n          priceSnap.docs.forEach((price) => {\r\n            products[productDoc.id].prices = {\r\n              priceId: price.id,\r\n              priceData: price.data(),\r\n            }\r\n          })\r\n        })\r\n        setProducts(products)\r\n      })\r\n  }, [])\r\n\r\n  const loadCheckout = async (priceId) => {\r\n    const docRef = await db\r\n      .collection(\"customers\")\r\n      .doc(user.uid)\r\n      .collection(\"checkout_sessions\")\r\n      .add({\r\n        price: priceId,\r\n        success_url: window.location.origin,\r\n        cancel_url: window.location.origin,\r\n      })\r\n    docRef.onSnapshot(async (snap) => {\r\n      const { error, sessionId } = snap.data()\r\n\r\n      if (error) {\r\n        alert(`An error occured: ${error.message}`)\r\n      }\r\n\r\n      if (sessionId) {\r\n        const stripe = await loadStripe(\r\n          \"pk_test_51IHZ4tLyMapiJ1vtbC2J4jRz9LG2sEzBQEmTLxWSb1xhDDj5pR9druu1w0lH0rqIRxmekqBaKxGxlBY1R82GaKHN003u3x6yAQ\"\r\n        )\r\n\r\n        stripe.redirectToCheckout({ sessionId })\r\n      }\r\n    })\r\n  }\r\n\r\n  console.log(products)\r\n  console.log(subscription)\r\n  return (\r\n    <div className=\"plansScreen\">\r\n      <br />\r\n      {subscription && (\r\n        <p>\r\n          Renews on:{\" \"}\r\n          {new Date(\r\n            subscription?.current_period_end * 1000\r\n          ).toLocaleDateString()}{\" \"}\r\n        </p>\r\n      )}\r\n\r\n      {Object.entries(products).map(([productId, productData]) => {\r\n        const isCurrentPackage = productData.name\r\n          ?.toLowerCase()\r\n          .includes(subscription?.role)\r\n\r\n        return (\r\n          <div\r\n            key={productId}\r\n            className={`${\r\n              isCurrentPackage && \"plansScreen__plan--disabled\"\r\n            } plansScreen__plan`}\r\n          >\r\n            <div className=\"plansScreen__info\">\r\n              <h5>{productData.name}</h5>\r\n              <h6>{productData.description}</h6>\r\n            </div>\r\n            <button\r\n              onClick={() =>\r\n                !isCurrentPackage && loadCheckout(productData?.prices.priceId)\r\n              }\r\n            >\r\n              {isCurrentPackage ? \"Current Package\" : \"Subscribe\"}\r\n            </button>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlansScreen\r\n","C:\\Users\\leemc\\Documents\\websites\\netflix-clone\\src\\screens\\WatchlistScreen.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":21,"column":9,"nodeType":"107","messageId":"108","endLine":21,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":50,"column":6,"nodeType":"111","endLine":50,"endColumn":12,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":89,"column":19,"nodeType":"115","messageId":"116","endLine":89,"endColumn":21},{"ruleId":"101","replacedBy":"117"},{"ruleId":"103","replacedBy":"118"},{"ruleId":"105","severity":1,"message":"119","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":24},{"ruleId":"105","severity":1,"message":"120","line":14,"column":9,"nodeType":"107","messageId":"108","endLine":14,"endColumn":16},{"ruleId":"105","severity":1,"message":"121","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"122","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":21},{"ruleId":"105","severity":1,"message":"123","line":13,"column":9,"nodeType":"107","messageId":"108","endLine":13,"endColumn":17},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'plan' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchSubs'. Either include it or remove the dependency array.","ArrayExpression",["126"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["124"],["125"],"'InfoOutlinedIcon' is defined but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'currentPlan' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [name, searchSubs]",{"range":"129","text":"130"},[1376,1382],"[name, searchSubs]"]